{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["classes","PREFIX","pairs","App","props","state","results","this","updateResults","bound","bind","setInterval","newPairs","map","tuple","a","one","two","winner","fetch","res","text","resBody","console","log","status","splitted","split","oneHere","match","parseInt","length","twoHere","stack","name","votes","className","Promise","all","then","setState","Table","striped","bordered","responsive","result","icon","faCheckCircle","style","toFixed","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b82ebc5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faCheckCircle, faTicketAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport axios from \"axios\";\n\nconst classes: { [key: string]: string } = {\n  \"Bakerloo\": \"bakerloo\",\n  \"Northern\": \"northern\",\n  \"Jubilee\": \"jubilee\",\n  \"TfL Rail\": \"tflrail\",\n  \"Central\": \"central\",\n  \"District\": \"district\",\n  \"Circle\": \"circle\",\n  \"Thames Link\": \"thameslink\"\n}\n\nconst DEVNULL = \"https://devnull-as-a-service.com/dev/null\";\nconst PREFIX = \"https://gentle-wildflower-0e5e.kishansambhi.workers.dev/?https://twitter.www.statshelix.com\"\n\nconst pairs = [\n  [\n    \"Bakerloo\",\n    \"Northern\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637628518223872\"\n  ],\n  [\n    \"Jubilee\",\n    \"TfL Rail\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637979858247680\"\n  ],\n  [\n    \"Central\",\n    \"District\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321001660479639552\"\n  ],\n  [\n    \"Circle\",\n    \"Thames Link\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321002110801108993\"\n  ]\n]\n\ninterface StateInfo {\n  one: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  two: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  winner: number;\n}\n\nclass App extends Component<any, { results: StateInfo[] }> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      results: []\n    }\n  }\n\n  componentDidMount() {\n    this.updateResults();\n    const bound = this.updateResults.bind(this);\n    setInterval(() => bound(), 15000);\n  }\n\n  updateResults() {\n    const newPairs: Promise<StateInfo>[] = pairs.map(async (tuple): Promise<StateInfo> => {\n      let one: number = 0;\n      let two: number = 0;\n      let winner: number = 0;\n      try {\n        if (tuple[2] !== DEVNULL) {\n          // Can get it\n          const res = await fetch(tuple[2]);\n\n          const resBody = await res.text();\n          console.log(resBody);\n          console.log(res.status);\n          // Assume pairs in correct order\n          const splitted = resBody.split(\"\\n\");\n          const oneHere = splitted[0].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n          one = parseInt(oneHere[0], 10);\n          if (oneHere.length > 1 && oneHere[1] === \"1\") {\n            winner = 1;\n          }\n\n          const twoHere = splitted[1].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n          two = parseInt(twoHere[0], 10);\n          if (twoHere.length > 1 && twoHere[1] === \"1\") {\n            winner = 2;\n          }\n\n        }\n      } catch (err) {\n        console.log(err.stack);\n      } finally {\n        return {\n          one: {\n            name: tuple[0],\n            votes: one,\n            className: classes[tuple[0]]\n          },\n          two: {\n            name: tuple[1],\n            votes: two,\n            className: classes[tuple[1]]\n          },\n          winner,\n        }\n      }\n    });\n\n    Promise.all(newPairs).then((results) => this.setState({\n      results,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Tube Lines World Cup:</h1>\n          <h5>Updated every 15 secs</h5>\n        </div>\n        <h3>Knockout stage games:</h3>\n        <Table striped bordered responsive>\n          <thead>\n            <tr>\n              <th>Line 1</th>\n              <th>Votes</th>\n              <th>%</th>\n              <th>Line 2</th>\n              <th>Votes</th>\n              <th>%</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.results.map((result) => {\n                return (\n                  <tr>\n                    <td className={result.one.className}>{result.one.name} { result.winner === 1 ? <FontAwesomeIcon icon={faCheckCircle}/> : \"\" }</td>\n                    <td>{result.one.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.one.className}>{((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                    <td className={result.two.className}>{result.two.name} {result.winner === 2 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n                    <td>{result.two.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.two.className}>{((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n        {/*<header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n  </header>*/}\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}