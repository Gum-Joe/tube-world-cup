{"version":3,"sources":["constants.tsx","ResultsTable.tsx","Graphs.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["classes","tweetNameMap","colours","DEVNULL","quarterfinals","ResultsTable","props","Table","striped","bordered","responsive","results","map","result","href","link","className","one","name","winner","icon","faCheckCircle","votes","style","two","toFixed","VictoryZoomVoronoiContainer","createContainer","Graphs","filter","today","isToday","historydata","history","gameName","oneVotes","resultHere","x","timestamp","y","twoVotes","difference","console","log","Col","sm","md","lg","horizontal","domainPadding","categories","height","width","padding","top","bottom","right","left","dependentAxis","label","fixLabelOverlap","axis","stroke","axisLabel","fontSize","tickLabels","grid","ticks","data","fill","datum","xName","labels","alignment","labelComponent","textAnchor","dx","strokeWidth","theme","VictoryTheme","material","containerComponent","voronoiDimension","radius","cornerRadius","flyoutStyle","parent","border","length","venueMap","App","state","resultsKnockout","resultsQFinals","resultsHistories","pairedPastGames","fetch","this","json","setState","filtered","forEach","index","push","updateResults","updateHistory","bound","bind","setInterval","boundHist","gameString","res","resJSON","tweet","game","includes","poll","options","tweetId","voting_status","venue","tuple","text","resBody","splitted","split","oneHere","match","parseInt","twoHere","stack","getUpdates","then","newquarterFinals","getUpdatesOld","Promise","all","Container","Row","game1","game2","faGithub","faTwitter","faInstagram","faYoutube","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VACaA,EAAsC,CACjD,SAAY,WACZ,SAAY,WACZ,QAAW,UACX,WAAY,UACZ,QAAW,UACX,SAAY,WACZ,OAAU,SACV,WAAc,aACd,MAAO,QACP,SAAY,WACZ,aAAgB,eAChB,MAAS,QACT,WAAc,aACd,SAAY,WACZ,IAAO,MACP,WAAc,YACd,MAAO,WAEIC,EAA2C,CACtD,gBAAiB,WACjB,gBAAiB,WACjB,eAAgB,UAChB,WAAY,WACZ,eAAgB,UAChB,gBAAiB,WACjB,cAAe,SACf,WAAc,aACd,0BAA2B,MAC3B,gBAAiB,WACjB,oBAAqB,eACrB,MAAS,QACT,oBAAqB,aACrB,YAAa,WACb,IAAO,MACP,kBAAmB,cAERC,EAAsC,CACjD,SAAY,UACZ,SAAY,UACZ,QAAW,UACX,WAAY,kBACZ,QAAW,mBACX,SAAY,kBACZ,OAAU,oBACV,WAAc,UACd,MAAO,qBACP,SAAY,mBACZ,aAAgB,kBAChB,MAAS,kBACT,WAAc,oBACd,SAAY,mBACZ,IAAO,mBACP,WAAc,mBAEHC,EAAU,4CAqDVC,EAAgB,CAC3B,CACE,WACA,aACAD,EACA,QACA,eAEF,CACE,WACA,eACAA,EACA,QACA,gBAEF,CACE,aACA,MACAA,EACA,QACA,a,kBC9EWE,EAzCV,SAACC,GACL,OACC,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAlC,UACC,gCACC,+BACC,sCACA,wCACA,uCACA,mCACA,wCACA,uCACA,mCACA,6CAGF,gCAEEJ,EAAMK,QAAQC,KAAI,SAACC,GAClB,OACC,+BACC,6BAAI,mBAAGC,KAAMD,EAAOE,KAAhB,oBACJ,qBAAIC,UAAWH,EAAOI,IAAID,UAA1B,UAAsCH,EAAOI,IAAIC,KAAjD,IAA0E,IAAlBL,EAAOM,OAAe,cAAC,IAAD,CAAiBC,KAAMC,MAAoB,MACzH,6BAAKR,EAAOI,IAAIK,QAChB,qBAAIC,MAAO,CACV,eAAiB,QAAjB,QAA4BV,EAAOI,IAAIK,OAAST,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,OAAS,KAAQ,GAAGG,QAAQ,GAA1G,MACET,UAAWH,EAAOI,IAAID,UAFzB,WAEuCH,EAAOI,IAAIK,OAAST,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,OAAS,KAAQ,GAAGG,QAAQ,GAFrH,OAGA,qBAAIT,UAAWH,EAAOW,IAAIR,UAA1B,UAAsCH,EAAOW,IAAIN,KAAjD,IAA0E,IAAlBL,EAAOM,OAAe,cAAC,IAAD,CAAiBC,KAAMC,MAAoB,MACzH,6BAAKR,EAAOW,IAAIF,QAChB,qBAAIC,MAAO,CACV,eAAiB,QAAjB,QAA4BV,EAAOW,IAAIF,OAAST,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,OAAS,KAAQ,GAAGG,QAAQ,GAA1G,MACET,UAAWH,EAAOW,IAAIR,UAFzB,WAEuCH,EAAOW,IAAIF,OAAST,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,OAAS,KAAQ,GAAGG,QAAQ,GAFrH,OAGA,6BAAKZ,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,MAAQT,EAAOI,IAAIK,MAAQT,EAAOW,IAAIF,MAAQT,EAAOW,IAAIF,MAAQT,EAAOI,IAAIK,oB,iFC7BjHI,EAA8BC,YAAgB,OAAQ,WA+N7CC,EA7NqC,SAACtB,GACpD,OACE,mCAECA,EAAMK,QAAQkB,QAAO,SAAAhB,GAAM,aAAIA,EAAOiB,SAAP,UAAkBxB,EAAMyB,eAAxB,aAA0CnB,KAAI,SAACC,GAE5E,IAAMmB,EAA+B1B,EAAM2B,QAAQpB,EAAOqB,UAC1D,GAA2B,qBAAhBF,EAAX,CAIA,IAAIG,EAAWH,EAAYrB,QAAQC,KAAI,SAACwB,GAEvC,MAAO,CACNC,GAAID,EAAWE,UAAYN,EAAYrB,QAAQ,GAAG2B,WAAa,IAAO,GAAK,GAC3EC,EAAGH,EAAWd,MAAML,QAGlBuB,EAAWR,EAAYrB,QAAQC,KAAI,SAACwB,GAEvC,MAAO,CACNC,GAAID,EAAWE,UAAYN,EAAYrB,QAAQ,GAAG2B,WAAa,IAAO,GAAK,GAC3EC,EAAGH,EAAWd,MAAME,QAIlBiB,EAAaT,EAAYrB,QAAQC,KAAI,SAACwB,GACzC,MAAO,CACNC,GAAID,EAAWE,UAAYN,EAAYrB,QAAQ,GAAG2B,WAAa,IAAO,GAAK,GAC3EC,EAAGH,EAAWd,MAAML,IAAMmB,EAAWd,MAAME,IAAMY,EAAWd,MAAML,IAAMmB,EAAWd,MAAME,IAAMY,EAAWd,MAAME,IAAMY,EAAWd,MAAML,QAOzI,OAHAyB,QAAQC,IAAI9B,EAAOI,IAAIC,MACvBwB,QAAQC,IAAI9B,EAAOW,IAAIN,MAGtB,qCACC,cAAC0B,EAAA,EAAD,CAAKC,IAAE,EAACC,IAAE,EAACC,IAAE,EAAb,SACC,eAAC,IAAD,CACCC,YAAY,EACZC,cAAe,CAAEZ,EAAG,KACpBa,WAAY,CAAEb,EAAG,CAACxB,EAAOI,IAAIC,KAAML,EAAOW,IAAIN,OAC9CiC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACRC,IAAI,EACJC,OAAQ,GACRC,MAAO,GACPC,KAAM,IAVR,UAaC,cAAC,IAAD,CACCC,eAAa,EACbC,MAAM,QACNC,iBAAe,EACfrC,MAAO,CACNsC,KAAM,CAAEC,OAAQ,WAChBC,UAAW,CAAEC,SAAU,GAAIX,QAAS,KACpCY,WAAY,CAAED,SAAU,GAAIX,QAAS,GACrCa,KAAM,CAAEJ,OAAQ,QAChBK,MAAO,CAAEL,OAAQ,WAGnB,cAAC,IAAD,CACCvC,MAAO,CACN6C,KAAM,CAAEC,KAAM,YAAc,IAAZC,EAAW,EAAXA,MAGf,OAAOpE,EAAQoE,EAAMC,QACnBnB,MAAO,IAAMoB,OAAQ,CACvBH,KAAM,UACNL,SAAU,KAGZS,UAAU,SACVD,OAAQ,gBAAGF,EAAH,EAAGA,MAAH,gBAAkBA,EAAMjC,IAChCqC,eAAgB,cAAC,IAAD,CAAcC,WAAY,MAAOC,IAAK,KACtDR,KAAM,CACL,CAAE7B,EAAG1B,EAAOI,IAAIK,MAAOe,EAAGxB,EAAOI,IAAIC,MACrC,CAAEqB,EAAG1B,EAAOW,IAAIF,MAAOe,EAAGxB,EAAOW,IAAIN,SAGvC,cAAC,IAAD,CACC0C,iBAAe,EACfrC,MAAO,CACNsC,KAAM,CAAEC,OAAQ,WAChBC,UAAW,CAAEC,SAAU,EAAGX,QAAS,GACnCY,WAAY,CAAED,SAAU,EAAGX,QAAS,GACpCa,KAAM,CAAEJ,OAAQ,OAAQe,YAAa,GACrCV,MAAO,CAAEU,YAAa,WAM1B,cAACjC,EAAA,EAAD,CAAKC,IAAE,EAACC,IAAE,EAACC,IAAE,EAAb,SACC,eAAC,IAAD,CACC+B,MAAOC,IAAaC,SACpB7B,OAAQ,IACRC,MAAO,IACPH,cAAe,CAAEV,EAAG,KACpBc,QAAS,CACRC,IAAK,EACLC,OAAQ,GACRE,KAAM,KAEPwB,mBAEC,cAACvD,EAAD,CAA6BwD,iBAAiB,IAC7CC,OAAQ,IAERX,OAAQ,gBAAGF,EAAH,EAAGA,MAAH,gBAAkBA,EAAM/B,IAChCmC,eAAgB,cAAC,IAAD,CAAgBU,aAAc,EAAGC,YAAa,CAAEhB,KAAM,QAASL,SAAU,QAhB5F,UAoBC,cAAC,IAAD,CACCN,eAAa,EACbC,MAAM,QACNC,iBAAe,EACfrC,MAAO,CACNsC,KAAM,CAAEC,OAAQ,WAChBC,UAAW,CAAEC,SAAU,GAAIX,QAAS,IACpCY,WAAY,CAAED,SAAU,GAAIX,QAAS,GACrCa,KAAM,CAAEJ,OAAQ,QAChBK,MAAO,CAAEL,OAAQ,WAGnB,cAAC,IAAD,CACCH,MAAM,aACNC,iBAAe,EACfrC,MAAO,CACNsC,KAAM,CAAEC,OAAQ,WAChBC,UAAW,CAAEC,SAAU,GAAIX,QAAS,IACpCY,WAAY,CAAED,SAAU,GAAIX,QAAS,GACrCa,KAAM,CAAEJ,OAAQ,QAChBK,MAAO,CAAEL,OAAQ,WAKE,QAApBjD,EAAOI,IAAIC,MAAsC,eAApBL,EAAOW,IAAIN,KAEvC,cAAC,IAAD,CACCA,KAAML,EAAOI,IAAIC,KACjBK,MAAO,CACN6C,KAAM,CAAEN,OAAQ5D,EAAO,IAAS2E,YAAa,GAC7CS,OAAQ,CAAEC,OAAQ,mBAEnBnB,KAAM,CACL,CACC/B,EAAG,EACHE,EAAG,MAEJ,CACCF,GAAIG,EAASA,EAASgD,OAAS,IAAM,CAAEnD,EAAG,IAAKA,EAC/CE,EAAG,SAIJ,KAGiB,QAApB1B,EAAOI,IAAIC,MAAsC,eAApBL,EAAOW,IAAIN,KAEvC,cAAC,IAAD,CACCK,MAAO,CACN6C,KAAM,CAAEN,OAAQ5D,EAAO,WAAgB2E,YAAa,GACpDS,OAAQ,CAAEC,OAAQ,mBAEnBnB,KAAM,CACL,CACC/B,EAAG,EACHE,EAAG,MAEJ,CACCF,GAAIG,EAASA,EAASgD,OAAS,IAAM,CAAEnD,EAAG,IAAKA,EAC/CE,EAAG,SAIJ,KAEJ,cAAC,IAAD,CACChB,MAAO,CACN6C,KAAM,CAAEN,OAAQ,kBAAmBe,YAAa,GAChDS,OAAQ,CAAEC,OAAQ,mBAEnBnB,KAAM3B,IAEP,cAAC,IAAD,CACClB,MAAO,CACN6C,KAAM,CAAEN,OAAQ5D,EAAQW,EAAOI,IAAIC,MAAO2D,YAAa,GACvDS,OAAQ,CAAEC,OAAQ,kBAClBf,OAAQ,CACPH,KAAMnE,EAAQW,EAAOI,IAAIC,QAG3BkD,KAAMjC,IAEP,cAAC,IAAD,CACCZ,MAAO,CACN6C,KAAM,CAAEN,OAAQ5D,EAAQW,EAAOW,IAAIN,MAAO2D,YAAa,GACvDS,OAAQ,CAAEC,OAAQ,kBAClBf,OAAQ,CACPH,KAAMnE,EAAQW,EAAOW,IAAIN,QAG3BkD,KAAM5B,mBCpNXiD,EAAsC,CAC1C,UAAa,WACb,UAAa,cACb,UAAa,eACb,UAAa,YAuNAC,E,kDA3Mb,WAAYpF,GAAa,IAAD,8BACtB,cAAMA,IAEDqF,MAAQ,CACXC,gBAAiB,GACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,gBAAiB,IAPG,E,gMAaAC,MHxCM,wC,cGwCtB/D,E,YACNgE,K,SAC2BhE,EAAQiE,O,yBAAjCJ,iB,WADGK,S,gBAMDJ,EAAiD,IAC/CK,EAAWH,KAAKN,MAAMC,gBAAgB/D,QAAO,SAAAhB,GAAM,OAAKA,EAAOiB,OAAgC,qBAAhBjB,EAAOE,SACnFsF,SAAQ,SAACxF,EAAQyF,GACnBA,EAAQ,IAAO,GAClBP,EAAgBQ,KAAK,CACnB1F,EACAuF,EAASE,EAAQ,QAIvB5D,QAAQC,IAAIoD,GACZE,KAAKE,SAAS,CACZJ,oB,iJAKFE,KAAKO,gBACLP,KAAKQ,gBACL,IAAMC,EAAQT,KAAKO,cAAcG,KAAKV,MACtCW,aAAY,kBAAMF,MAAS,KAE3B,IAAMG,EAAYZ,KAAKQ,cAAcE,KAAKV,MAE1CW,aAAY,kBAAMC,MAAa,O,0EAGhBC,G,yFAEGd,MAAM,qC,cAAlBe,E,gBACgBA,EAAIb,O,cAApBc,E,yBACCA,EAAQnF,QAAO,SAACoF,GAAD,OAAqBA,EAAMC,KAAKC,SAASL,MAAalG,KAAI,SAACqG,GAE/E,OADAvE,QAAQC,IAAI1C,EAAagH,EAAMG,KAAKC,QAAQ,GAAG1D,QACxC,CACLzB,SAAU+E,EAAMC,KAChBjG,IAAK,CACHC,KAAMjB,EAAagH,EAAMG,KAAKC,QAAQ,GAAG1D,QAAU,MACnDrC,MAAO2F,EAAMG,KAAKC,QAAQ,GAAG/F,MAC7BN,UAAWhB,EAAQC,EAAagH,EAAMG,KAAKC,QAAQ,GAAG1D,QAAU,QAElEnC,IAAK,CACHN,KAAMjB,EAAagH,EAAMG,KAAKC,QAAQ,GAAG1D,QAAU,MACnDrC,MAAO2F,EAAMG,KAAKC,QAAQ,GAAG/F,MAC7BN,UAAWhB,EAAQC,EAAagH,EAAMG,KAAKC,QAAQ,GAAG1D,QAAU,QAElExC,OACE8F,EAAMG,KAAKC,QAAQ,GAAG/F,MAAQ2F,EAAMG,KAAKC,QAAQ,GAAG/F,MAAQ,EAAI,EAElEP,KAAM,wCAA0CkG,EAAMK,QACtDxF,MAAoC,SAA7BmF,EAAMG,KAAKG,cAClBC,MAAO/B,EAASwB,EAAMC,OAAS,W,+KAMjBO,G,wFACdxG,EAAc,EACdO,EAAc,EACdL,EAAiB,E,SAEfsG,EAAM,KAAOtH,E,iCAEG6F,MAAMyB,EAAM,I,cAAxBV,E,iBAEgBA,EAAIW,O,QAApBC,E,OAEAC,EAAWD,EAAQE,MAAM,MACzBC,EAAUF,EAAS,GAAGG,MAAM,0BAA4B,CAAC,KAC/D9G,EAAM+G,SAASF,EAAQ,GAAI,IACvBA,EAAQtC,OAAS,GAAoB,MAAfsC,EAAQ,KAChC3G,EAAS,GAGL8G,EAAUL,EAAS,GAAGG,MAAM,0BAA4B,CAAC,KAC/DvG,EAAMwG,SAASC,EAAQ,GAAI,IACvBA,EAAQzC,OAAS,GAAoB,MAAfyC,EAAQ,KAChC9G,EAAS,G,0DAIbuB,QAAQC,IAAI,KAAIuF,O,2CAET,CACLhG,SAAU,UACVjB,IAAK,CACHC,KAAMuG,EAAM,GACZnG,MAAOL,EACPD,UAAWhB,EAAQyH,EAAM,KAE3BjG,IAAK,CACHN,KAAMuG,EAAM,GACZnG,MAAOE,EACPR,UAAWhB,EAAQyH,EAAM,KAE3BtG,SACAJ,KAAM0G,EAAM,GAAGI,MAAM,QAAQ,GAC7B/F,MAAoB,SAAb2F,EAAM,GACbD,MAAOC,EAAM,K,6JAKF,IAAD,OAEd/E,QAAQC,IAAI,WAEZsD,KAAKkC,WAAW,YAAYC,MAAK,SAACzH,GAAD,OAAa,EAAKwF,SAAS,CAC1DP,gBAAiBjF,OAGnB,IAAM0H,EAAyCjI,EAAcQ,IAAIqF,KAAKqC,eAEtEC,QAAQC,IAAIH,GAAkBD,MAAK,SAACvC,GAClC,EAAKsC,WAAW,WAAWC,MAAK,SAACzH,GAC/B,EAAKwF,SAAS,CACZN,eAAe,GAAD,mBACTlF,GADS,YAETkF,c,+BAOH,IAAD,OAEP,OACE,sBAAK7E,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uDACA,kFACA,6IAEF,gDACA,cAAC,EAAD,CAAcL,QAASsF,KAAKN,MAAME,iBAGlC,gDACA,uGACA,2FACA,cAAC4C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAQ/H,QAAO,sBAAMsF,KAAKN,MAAME,gBAAjB,YAAoCI,KAAKN,MAAMC,kBAAmB3D,QAASgE,KAAKN,MAAMG,uBAIzG,yDACA,cAAC,EAAD,CAAcnF,QAASsF,KAAKN,MAAMC,kBAElC,6CACA,cAAC6C,EAAA,EAAD,UAEKxC,KAAKN,MAAMI,gBAAgBnF,KAAI,YAAqB,IAAD,mBAAlB+H,EAAkB,KAAXC,EAAW,KAEjD,OADAlG,QAAQC,IAAIgG,GAEZ,cAACD,EAAA,EAAD,UACI,cAAC,EAAD,CAAQ/H,QAA0B,qBAAViI,EAAwB,CAACD,EAAOC,GAAS,CAACD,GAAQ1G,QAAS,EAAK0D,MAAMG,iBAAkB/D,SAAS,WAMpI,iCACE,eAAC0G,EAAA,EAAD,2CAC+B,mBAAG3H,KAAK,gCAAR,8BAD/B,4BACoH,uBADpH,gCAE+B,uBAC7B,oBAAGA,KAAK,6BAAR,UAAqC,cAAC,IAAD,CAAiBM,KAAMyH,MAA5D,cAHF,IAGuF,uBACrF,oBAAG/H,KAAK,uCAAR,UAA+C,cAAC,IAAD,CAAiBM,KAAM0H,MAAtE,uBAJF,IAI2G,uBACzG,oBAAGhI,KAAK,yCAAR,UAAiD,cAAC,IAAD,CAAiBM,KAAM2H,MAAxE,oBALF,IAK4G,uBAC1G,oBAAGjI,KAAK,2DAAR,UAAmE,cAAC,IAAD,CAAiBM,KAAM4H,MAA1F,cACA,uBAPF,qBAQoB,mBAAGlI,KAAK,8BAAR,uBARpB,qBAQyF,mBAAGA,KAAK,gCAAR,wBARzF,yBASE,uBATF,oF,GA/LQmI,aCRHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ddf42b9e.chunk.js","sourcesContent":["export const REALTIME_RESULTS = \"https://api.davwheat.dev/fullhistory\";\nexport const classes: { [key: string]: string; } = {\n  \"Bakerloo\": \"bakerloo\",\n  \"Northern\": \"northern\",\n  \"Jubilee\": \"jubilee\",\n  \"TfL Rail\": \"tflrail\",\n  \"Central\": \"central\",\n  \"District\": \"district\",\n  \"Circle\": \"circle\",\n  \"Thameslink\": \"thameslink\",\n  \"H&C\": \"handc\",\n  \"Victoria\": \"victoria\",\n  \"Metropolitan\": \"metropolitan\",\n  \"Trams\": \"trams\",\n  \"Overground\": \"overground\",\n  \"CableCar\": \"cablecar\",\n  \"DLR\": \"dlr\",\n  \"Piccadilly\": \"picadilly\",\n  \"???\": \"unknown\",\n};\nexport const tweetNameMap: { [key: string]: string; } = {\n  \"Bakerloo Line\": \"Bakerloo\",\n  \"Northern Line\": \"Northern\",\n  \"Jubilee Line\": \"Jubilee\",\n  \"TfL Rail\": \"TfL Rail\",\n  \"Central Line\": \"Central\",\n  \"District Line\": \"District\",\n  \"Circle Line\": \"Circle\",\n  \"Thameslink\": \"Thameslink\",\n  \"Hammersmith & City Line\": \"H&C\",\n  \"Victoria Line\": \"Victoria\",\n  \"Metropolitan Line\": \"Metropolitan\",\n  \"Trams\": \"Trams\",\n  \"London Overground\": \"Overground\",\n  \"Cable Car\": \"CableCar\",\n  \"DLR\": \"DLR\",\n  \"Piccadilly Line\": \"Piccadilly\",\n};\nexport const colours: { [key: string]: string; } = {\n  \"Bakerloo\": \"#B36305\",\n  \"Northern\": \"#000000\",\n  \"Jubilee\": \"#A0A5A9\",\n  \"TfL Rail\": \"rgb(0, 25, 168)\",\n  \"Central\": \"rgb(220, 36, 31)\",\n  \"District\": \"rgb(0, 125, 50)\",\n  \"Circle\": \"rgb(255, 211, 41)\",\n  \"Thameslink\": \"#E9438D\",\n  \"H&C\": \"rgb(244, 169, 190)\",\n  \"Victoria\": \"rgb(0, 152, 216)\",\n  \"Metropolitan\": \"rgb(155, 0, 88)\",\n  \"Trams\": \"rgb(0, 189, 25)\",\n  \"Overground\": \"rgb(239, 123, 16)\",\n  \"CableCar\": \"rgb(220, 36, 31)\",\n  \"DLR\": \"rgb(0, 175, 173)\",\n  \"Piccadilly\": \"rgb(0, 25, 168)\"\n};\nexport const DEVNULL = \"https://devnull-as-a-service.com/dev/null\";\nconst PREFIX = \"https://twitter.www.statshelix.com\";\nconst FULL_PREFIX = PREFIX + \"/api/Tweet/GetTweet?url=\";\nconst pairs = [\n  [\n    \"Bakerloo\",\n    \"Northern\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637628518223872\",\n    \"false\"\n  ],\n  [\n    \"Jubilee\",\n    \"TfL Rail\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637979858247680\",\n    \"false\"\n  ],\n  [\n    \"Central\",\n    \"District\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321001660479639552\",\n    \"false\",\n  ],\n  [\n    \"Circle\",\n    \"Thameslink\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321002110801108993\",\n    \"false\",\n  ],\n  [\n    \"H&C\",\n    \"Victoria\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321364991803621376\",\n    \"true\",\n  ],\n  [\n    \"Metropolitan\",\n    \"Trams\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321365302811217923\",\n    \"true\",\n  ],\n  [\n    \"Overground\",\n    \"CableCar\",\n    DEVNULL,\n    \"false\" // CHANGEME\n  ],\n  [\n    \"DLR\",\n    \"Piccadilly\",\n    DEVNULL,\n    \"false\" // CHANGEME\n  ]\n];\nexport const quarterfinals = [\n  [\n    \"District\",\n    \"Thameslink\",\n    DEVNULL,\n    \"false\",\n    \"Blackfriars\"\n  ],\n  [\n    \"Victoria\",\n    \"Metropolitan\",\n    DEVNULL,\n    \"false\",\n    \"King's Cross\"\n  ],\n  [\n    \"Overground\",\n    \"DLR\",\n    DEVNULL,\n    \"false\",\n    \"Shadwell\"\n  ],\n];\nexport interface StateInfo {\n  gameName: string;\n  one: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  two: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  winner: number;\n  link: string;\n  today: boolean;\n  venue?: string;\n}\nexport interface DavidAPI {\n  tweetId: string;\n  game: string;\n  poll: {\n    voting_status: string;\n    end_datetime: string;\n    id: string;\n    duration_minutes: string;\n    options: {\n      position: number;\n      label: string;\n      votes: number;\n    }[];\n  };\n}\nexport interface ResultHistories {\n  gane: string;\n  options: {\n    one: string;\n    two: string;\n  };\n  results: {\n    timestamp: number;\n    votes: {\n      one: number;\n      two: number;\n    };\n  }[];\n}\n","import React, { ReactNode } from \"react\"\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport { Table } from \"react-bootstrap\"\nimport { StateInfo } from \"./constants\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\n\nconst ResultsTable: React.FunctionComponent<{\n\tresults: StateInfo[],\n\tchildren?: ReactNode;\n}> = (props) => {\n\treturn (\n\t\t<Table striped bordered responsive>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Link</th>\n\t\t\t\t\t<th>Line 1</th>\n\t\t\t\t\t<th>Votes</th>\n\t\t\t\t\t<th>%</th>\n\t\t\t\t\t<th>Line 2</th>\n\t\t\t\t\t<th>Votes</th>\n\t\t\t\t\t<th>%</th>\n\t\t\t\t\t<th>∆</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{\n\t\t\t\t\tprops.results.map((result) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href={result.link}>View</a></td>\n\t\t\t\t\t\t\t\t<td className={result.one.className}>{result.one.name} {result.winner === 1 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n\t\t\t\t\t\t\t\t<td>{result.one.votes}</td>\n\t\t\t\t\t\t\t\t<td style={{\n\t\t\t\t\t\t\t\t\t\"backgroundSize\": `100% ${((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n\t\t\t\t\t\t\t\t}} className={result.one.className}>{((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n\t\t\t\t\t\t\t\t<td className={result.two.className}>{result.two.name} {result.winner === 2 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n\t\t\t\t\t\t\t\t<td>{result.two.votes}</td>\n\t\t\t\t\t\t\t\t<td style={{\n\t\t\t\t\t\t\t\t\t\"backgroundSize\": `100% ${((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n\t\t\t\t\t\t\t\t}} className={result.two.className}>{((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n\t\t\t\t\t\t\t\t<td>{result.one.votes > result.two.votes ? result.one.votes - result.two.votes : result.two.votes - result.one.votes}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</tbody>\n\t\t</Table>\n\t)\n}\n\nexport default ResultsTable;","import React from \"react\";\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\nimport { VictoryChart, VictoryTheme, VictoryBar, VictoryLabel, VictoryAxis, VictoryLine, VictoryTooltip, VictoryContainer, createContainer } from \"victory\";\nimport { colours, ResultHistories, StateInfo } from \"./constants\";\n\ninterface GraphProps {\n\tresults: StateInfo[],\n\thistory: Record<string, ResultHistories>,\n\tisToday?: boolean,\n}\n\n\nconst VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n\nconst Graphs: React.FunctionComponent<GraphProps> = (props) => {\n\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\tprops.results.filter(result => result.today === (props.isToday ?? true)).map((result) => {\n\n\t\t\t\t\t\tconst historydata: ResultHistories = props.history[result.gameName];\n\t\t\t\t\t\tif (typeof historydata === \"undefined\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet oneVotes = historydata.results.map((resultHere) => {\n\t\t\t\t\t\t\t//console.log(resultHere.time - historydata.startTime);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (resultHere.timestamp - historydata.results[0].timestamp) / 1000 / 60 / 60,\n\t\t\t\t\t\t\t\ty: resultHere.votes.one\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet twoVotes = historydata.results.map((resultHere) => {\n\t\t\t\t\t\t\t//console.log(resultHere.time - historydata.startTime);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (resultHere.timestamp - historydata.results[1].timestamp) / 1000 / 60 / 60,\n\t\t\t\t\t\t\t\ty: resultHere.votes.two\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tlet difference = historydata.results.map((resultHere) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (resultHere.timestamp - historydata.results[1].timestamp) / 1000 / 60 / 60,\n\t\t\t\t\t\t\t\ty: resultHere.votes.one > resultHere.votes.two ? resultHere.votes.one - resultHere.votes.two : resultHere.votes.two - resultHere.votes.one\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tconsole.log(result.one.name);\n\t\t\t\t\t\tconsole.log(result.two.name);\n\t\t\t\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col sm md lg>\n\t\t\t\t\t\t\t\t\t<VictoryChart\n\t\t\t\t\t\t\t\t\t\thorizontal={true}\n\t\t\t\t\t\t\t\t\t\tdomainPadding={{ x: 100 }}\n\t\t\t\t\t\t\t\t\t\tcategories={{ x: [result.one.name, result.two.name] }}\n\t\t\t\t\t\t\t\t\t\theight={350}\n\t\t\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\t\t\tpadding={{\n\t\t\t\t\t\t\t\t\t\t\ttop:0,\n\t\t\t\t\t\t\t\t\t\t\tbottom: 80,\n\t\t\t\t\t\t\t\t\t\t\tright: 10,\n\t\t\t\t\t\t\t\t\t\t\tleft: 10\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<VictoryAxis\n\t\t\t\t\t\t\t\t\t\t\tdependentAxis\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Votes\"\n\t\t\t\t\t\t\t\t\t\t\tfixLabelOverlap\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\taxis: { stroke: \"#756f6a\" },\n\t\t\t\t\t\t\t\t\t\t\t\taxisLabel: { fontSize: 30, padding: 100 },\n\t\t\t\t\t\t\t\t\t\t\t\ttickLabels: { fontSize: 20, padding: 5 },\n\t\t\t\t\t\t\t\t\t\t\t\tgrid: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t\tticks: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VictoryBar\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { fill: ({datum}) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log(datum.xName);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log(colours[datum.xName]);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn colours[datum.xName];\n\t\t\t\t\t\t\t\t\t\t\t\t}, width: 60 }, labels: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill: \"#ffffff\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 30,\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\talignment=\"middle\"\n\t\t\t\t\t\t\t\t\t\t\tlabels={({ datum }) => `${datum.x}`}\n\t\t\t\t\t\t\t\t\t\t\tlabelComponent={<VictoryLabel textAnchor={\"end\"} dx={-20} />}\n\t\t\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\t\t\t{ y: result.one.votes, x: result.one.name },\n\t\t\t\t\t\t\t\t\t\t\t\t{ y: result.two.votes, x: result.two.name }\n\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VictoryAxis\n\t\t\t\t\t\t\t\t\t\t\tfixLabelOverlap\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\taxis: { stroke: \"#756f6a\" },\n\t\t\t\t\t\t\t\t\t\t\t\taxisLabel: { fontSize: 0, padding: 0 },\n\t\t\t\t\t\t\t\t\t\t\t\ttickLabels: { fontSize: 0, padding: 0 },\n\t\t\t\t\t\t\t\t\t\t\t\tgrid: { stroke: \"grey\", strokeWidth: 0 },\n\t\t\t\t\t\t\t\t\t\t\t\tticks: { strokeWidth: 0 },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</VictoryChart>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t{/*BEGIN LINES */}\n\t\t\t\t\t\t\t\t<Col sm md lg>\n\t\t\t\t\t\t\t\t\t<VictoryChart\n\t\t\t\t\t\t\t\t\t\ttheme={VictoryTheme.material}\n\t\t\t\t\t\t\t\t\t\theight={350 * 1.5 - 50}\n\t\t\t\t\t\t\t\t\t\twidth={750}\n\t\t\t\t\t\t\t\t\t\tdomainPadding={{ y: 100 }}\n\t\t\t\t\t\t\t\t\t\tpadding={{\n\t\t\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\t\t\tbottom: 80,\n\t\t\t\t\t\t\t\t\t\t\tleft: 100\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tcontainerComponent={\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t<VictoryZoomVoronoiContainer voronoiDimension=\"x\"\n\t\t\t\t\t\t\t\t\t\t\t\tradius={100000}\n\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\t\t\t\tlabels={({ datum }) => `${datum.y}`}\n\t\t\t\t\t\t\t\t\t\t\t\tlabelComponent={<VictoryTooltip cornerRadius={0} flyoutStyle={{ fill: \"white\", fontSize: 20 }} />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<VictoryAxis\n\t\t\t\t\t\t\t\t\t\t\tdependentAxis\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Votes\"\n\t\t\t\t\t\t\t\t\t\t\tfixLabelOverlap\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\taxis: { stroke: \"#756f6a\" },\n\t\t\t\t\t\t\t\t\t\t\t\taxisLabel: { fontSize: 20, padding: 40 },\n\t\t\t\t\t\t\t\t\t\t\t\ttickLabels: { fontSize: 20, padding: 5 },\n\t\t\t\t\t\t\t\t\t\t\t\tgrid: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t\tticks: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VictoryAxis\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Time (hrs)\"\n\t\t\t\t\t\t\t\t\t\t\tfixLabelOverlap\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\taxis: { stroke: \"#756f6a\" },\n\t\t\t\t\t\t\t\t\t\t\t\taxisLabel: { fontSize: 20, padding: 40 },\n\t\t\t\t\t\t\t\t\t\t\t\ttickLabels: { fontSize: 20, padding: 5 },\n\t\t\t\t\t\t\t\t\t\t\t\tgrid: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t\tticks: { stroke: \"grey\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* If Picadilly and DLR, PLOT */}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresult.one.name === \"DLR\" && result.two.name === \"Piccadilly\" ?\n\t\t\t\t\t\t\t\t\t\t\t\t// DLR\n\t\t\t\t\t\t\t\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={result.one.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: { stroke: colours[\"DLR\"], strokeWidth: 3 },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: 1711\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: (twoVotes[twoVotes.length - 1] || { x: 0 }).x,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: 1711\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresult.one.name === \"DLR\" && result.two.name === \"Piccadilly\" ?\n\t\t\t\t\t\t\t\t\t\t\t\t// DLR\n\t\t\t\t\t\t\t\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata: { stroke: colours[\"Piccadilly\"], strokeWidth: 3 },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\" }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: 1882\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: (twoVotes[twoVotes.length - 1] || { x: 0 }).x,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: 1882\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { stroke: \"rgb(65, 75, 86)\", strokeWidth: 2 },\n\t\t\t\t\t\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\" },\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdata={difference}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { stroke: colours[result.one.name], strokeWidth: 5 },\n\t\t\t\t\t\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\" },\n\t\t\t\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill: colours[result.one.name]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdata={oneVotes}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VictoryLine\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdata: { stroke: colours[result.two.name], strokeWidth: 5 },\n\t\t\t\t\t\t\t\t\t\t\t\tparent: { border: \"1px solid #ccc\" },\n\t\t\t\t\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill: colours[result.two.name]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdata={twoVotes}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</VictoryChart>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</>\n\t)\n}\n\nexport default Graphs;","import React, { Component } from \"react\";\nimport './App.css';\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { VictoryChart, VictoryTheme, VictoryBar, VictoryLabel, VictoryAxis, VictoryLine, VictoryVoronoiContainer, VictoryTooltip, VictoryZoomContainer, VictoryContainer, createContainer } from \"victory\";\nimport { faGithub, faInstagram, faTwitter, faYoutube } from \"@fortawesome/free-brands-svg-icons\";\nimport { StateInfo, ResultHistories, REALTIME_RESULTS, DavidAPI, tweetNameMap, classes, DEVNULL, quarterfinals, colours } from \"./constants\";\nimport ResultsTable from \"./ResultsTable\";\nimport Graphs from \"./Graphs\";\n\nconst venueMap: { [key: string]: string } = {\n  \"quartera1\": \"Waterloo\",\n  \"quartera2\": \"Blackfriars\",\n  \"quarterb3\": \"King's Cross\",\n  \"quarterb4\": \"Shadwell\",\n}\n\n\n\nclass App extends Component<any, {\n  resultsKnockout: StateInfo[],\n  resultsQFinals: StateInfo[],\n  resultsHistories: Record<string, ResultHistories>,\n  pairedPastGames: Array<[StateInfo, StateInfo | undefined]>,\n}> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      resultsKnockout: [],\n      resultsQFinals: [],\n      resultsHistories: {},\n      pairedPastGames: [],\n    }\n  }\n\n  async updateHistory() {\n    //console.log(\"FITOWRST\");\n    const history = await fetch(REALTIME_RESULTS)\n    this.setState({\n      resultsHistories: (await history.json())\n    })\n\n    // Update pairs\n    // Generate past games\n    let pairedPastGames: Array<[StateInfo, StateInfo]> = [];\n    const filtered = this.state.resultsKnockout.filter(result => !result.today && typeof result.link !== \"undefined\");\n    filtered.forEach((result, index) => {\n      if ((index % 2) === 0) {\n        pairedPastGames.push([\n          result,\n          filtered[index + 1],\n        ])\n      }\n    });\n    console.log(pairedPastGames);\n    this.setState({\n      pairedPastGames,\n    });\n  }\n\n  componentDidMount() {\n    this.updateResults();\n    this.updateHistory();\n    const bound = this.updateResults.bind(this);\n    setInterval(() => bound(), 20000);\n\n    const boundHist = this.updateHistory.bind(this);\n\n    setInterval(() => boundHist(), 60000)\n  }\n\n  async getUpdates(gameString: string): Promise<StateInfo[]> {\n    // NEW API\n    const res = await fetch(\"https://api.davwheat.dev/getpolls\");\n    const resJSON = await res.json();\n    return resJSON.filter((tweet: DavidAPI) => tweet.game.includes(gameString)).map((tweet: DavidAPI): StateInfo => {\n      console.log(tweetNameMap[tweet.poll.options[0].label])\n      return {\n        gameName: tweet.game,\n        one: {\n          name: tweetNameMap[tweet.poll.options[0].label] || \"???\",\n          votes: tweet.poll.options[0].votes,\n          className: classes[tweetNameMap[tweet.poll.options[0].label] || \"???\"]\n        },\n        two: {\n          name: tweetNameMap[tweet.poll.options[1].label] || \"???\",\n          votes: tweet.poll.options[1].votes,\n          className: classes[tweetNameMap[tweet.poll.options[1].label] || \"???\"]\n        },\n        winner: (\n          tweet.poll.options[0].votes > tweet.poll.options[1].votes ? 1 : 2\n        ),\n        link: \"https://twitter.com/geofftech/status/\" + tweet.tweetId,\n        today: tweet.poll.voting_status === \"open\" ? true : false,\n        venue: venueMap[tweet.game] || \"???\",\n      }\n    });\n  }\n\n  // Kept around because we need it for pending \n  async getUpdatesOld(tuple: string[]): Promise<StateInfo> {\n    let one: number = 0;\n    let two: number = 0;\n    let winner: number = 0;\n    try {\n      if (tuple[2] !== DEVNULL) {\n        // Can get it\n        const res = await fetch(tuple[2]);\n\n        const resBody = await res.text();\n        // Assume pairs in correct order\n        const splitted = resBody.split(\"\\n\");\n        const oneHere = splitted[0].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n        one = parseInt(oneHere[0], 10);\n        if (oneHere.length > 1 && oneHere[1] === \"1\") {\n          winner = 1;\n        }\n\n        const twoHere = splitted[1].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n        two = parseInt(twoHere[0], 10);\n        if (twoHere.length > 1 && twoHere[1] === \"1\") {\n          winner = 2;\n        }\n      }\n    } catch (err) {\n      console.log(err.stack);\n    } finally {\n      return {\n        gameName: \"unknown\",\n        one: {\n          name: tuple[0],\n          votes: one,\n          className: classes[tuple[0]]\n        },\n        two: {\n          name: tuple[1],\n          votes: two,\n          className: classes[tuple[1]]\n        },\n        winner,\n        link: tuple[2].split(\"url=\")[1],\n        today: tuple[3] === \"true\" ? true : false,\n        venue: tuple[4],\n      }\n    }\n  }\n\n  updateResults() {\n    //const newPairs: Promise<StateInfo>[] = pairs.map(this.getUpdates);\n    console.log(\"UPDATED\");\n\n    this.getUpdates(\"knockout\").then((results) => this.setState({\n      resultsKnockout: results,\n    }));\n\n    const newquarterFinals: Promise<StateInfo>[] = quarterfinals.map(this.getUpdatesOld);\n\n    Promise.all(newquarterFinals).then((resultsQFinals) => {\n      this.getUpdates(\"quarter\").then((results) => {\n        this.setState({\n          resultsQFinals: [\n            ...results,\n            ...resultsQFinals,\n          ],\n        })\n      });\n    });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Tube Lines World Cup:</h1>\n          <h5>Updated every 20 secs. Please view in landscape.</h5>\n          <h6>Note: if no votes are showing, the API this site uses has gone down and should be back up in a few mins.</h6>\n        </div>\n        <h3>Quarterfinals:</h3>\n        <ResultsTable results={this.state.resultsQFinals} />\n        \n        \n        <h3>Today's games:</h3>\n        <h6>Straight lines represent votes in the same match from previous years.</h6>\n        <h6>Thin grey lines represent the difference between options.</h6>\n        <Container>\n          <Row>\n            <Graphs results={[...this.state.resultsQFinals, ...this.state.resultsKnockout ]} history={this.state.resultsHistories} />\n          </Row>\n        </Container>\n\n        <h3>Knockout stage results:</h3>\n        <ResultsTable results={this.state.resultsKnockout} />\n\n        <h3>Past games:</h3>\n        <Container>\n            {\n             this.state.pairedPastGames.map(([game1, game2]) => {\n               console.log(game1);\n               return (\n               <Row>\n                   <Graphs results={typeof game2 !== \"undefined\" ? [game1, game2] : [game1]} history={this.state.resultsHistories} isToday={false}/>\n               </Row>)\n             })\n            }\n        </Container>\n\n        <footer>\n          <Container>\n            Created by @k_sam_mighty for <a href=\"https://twitter.com/geofftech\">Geoff Marshall's</a> World Cup of Tube Lines.<br/>\n            Find me (@k_sam_mighty) here:<br />\n            <a href=\"https://github.com/Gum-Joe\"><FontAwesomeIcon icon={faGithub} /> Gum-Joe</a> <br />\n            <a href=\"hhttps://twitter.com/official_gumjoe\"><FontAwesomeIcon icon={faTwitter} /> @official_gumjoe</a> <br />\n            <a href=\"https://www.instagram.com/k_sam_mighty\"><FontAwesomeIcon icon={faInstagram} /> @k_sam_mighty</a> <br />\n            <a href=\"https://www.youtube.com/channel/UCIwdVs7v-WL7_5erRzNv6sw\"><FontAwesomeIcon icon={faYoutube} /> Gum Joe</a>\n            <br />\n            Special thanks to <a href=\"https://github.com/davwheat\">@davwheat</a> for the API, and <a href=\"https://twitter.com/_FlaiFlai\">@_FlaiFlai</a> for the original API.\n            <br />Thank you to all the memebers of the community who contributed ideas!\n          </Container>\n        </footer>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}