{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["REALTIME_RESULTS","classes","colours","DEVNULL","PREFIX","pairs","quarterfinals","App","props","state","results","resultsQFinals","resultsHistories","console","log","fetch","history","this","json","matches","setState","updateResults","updateHistory","bound","bind","setInterval","a","tuple","one","two","winner","res","text","resBody","splitted","split","oneHere","match","parseInt","length","twoHere","stack","name","votes","className","link","today","venue","newPairs","map","getUpdates","Promise","all","then","newquarterFinals","Table","striped","bordered","responsive","result","icon","faCheckCircle","style","toFixed","href","Container","filter","historydata","element","oneVotes","twoVotes","resultHere","time","startTime","x","y","Row","Col","sm","md","lg","horizontal","domainPadding","categories","height","width","padding","top","bottom","right","left","dependentAxis","label","fixLabelOverlap","axis","stroke","axisLabel","fontSize","tickLabels","grid","ticks","data","fill","datum","xName","labels","alignment","labelComponent","textAnchor","dx","strokeWidth","theme","VictoryTheme","material","parent","border","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a1fb755.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faCheckCircle, faTicketAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { VictoryChart, VictoryTheme, VictoryBar, VictoryLabel, VictoryAxis, VictoryLine } from \"victory\";\n\n\nconst REALTIME_RESULTS = \"https://gentle-wildflower-0e5e.kishansambhi.workers.dev/?http://tubelinecomp.gumjoe.com/api/get/tube-results\";\n\nconst classes: { [key: string]: string } = {\n  \"Bakerloo\": \"bakerloo\",\n  \"Northern\": \"northern\",\n  \"Jubilee\": \"jubilee\",\n  \"TfL Rail\": \"tflrail\",\n  \"Central\": \"central\",\n  \"District\": \"district\",\n  \"Circle\": \"circle\",\n  \"Thameslink\": \"thameslink\",\n  \"H&C\": \"handc\",\n  \"Victoria\": \"victoria\",\n  \"Metropolitan\": \"metropolitan\",\n  \"Trams\": \"trams\",\n  \"Overground\": \"overground\",\n  \"CableCar\": \"cablecar\",\n  \"DLR\": \"dlr\",\n  \"Piccadilly\": \"picadilly\",\n  \"???\": \"unknown\",\n}\n\nconst colours: { [key: string]: string } = {\n  \"Bakerloo\": \"#B36305\",\n  \"Northern\": \"#000000\",\n  \"Jubilee\": \"#A0A5A9\",\n  \"TfL Rail\": \"rgb(0, 25, 168)\",\n  \"Central\": \"rgb(220, 36, 31)\",\n  \"District\": \"rgb(0, 125, 50)\",\n  \"Circle\": \"rgb(255, 211, 41)\",\n  \"Thameslink\": \"#E9438D\",\n  \"H&C\": \"rgb(244, 169, 190);\",\n  \"Victoria\": \"rgb(0, 152, 216);\",\n  \"Metropolitan\": \"rgb(155, 0, 88)\",\n  \"Trams\": \"rgb(0, 189, 25)\",\n  \"Overground\": \"rgb(239, 123, 16)\",\n  \"CableCar\": \"rgb(220, 36, 31)\",\n  \"DLR\": \"rgb(0, 175, 173)\",\n  \"Piccadilly\": \"rgb(0, 25, 168)\"\n}\n\nconst DEVNULL = \"https://devnull-as-a-service.com/dev/null\";\nconst PREFIX = \"https://twitter.www.statshelix.com\"\n\nconst pairs = [\n  [\n    \"Bakerloo\",\n    \"Northern\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637628518223872\",\n    \"false\"\n  ],\n  [\n    \"Jubilee\",\n    \"TfL Rail\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1320637979858247680\",\n    \"false\"\n  ],\n  [\n    \"Central\",\n    \"District\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321001660479639552\",\n    \"true\",\n  ],\n  [\n    \"Circle\",\n    \"Thameslink\",\n    PREFIX + \"/api/Tweet/GetTweet?url=https://twitter.com/geofftech/status/1321002110801108993\",\n    \"true\",\n  ],\n  [\n    \"H&C\",\n    \"Victoria\",\n    DEVNULL,\n  ],\n  [\n    \"Metropolitan\",\n    \"Trams\",\n    DEVNULL,\n  ],\n  [\n    \"Overground\",\n    \"CableCar\",\n    DEVNULL,\n  ],\n  [\n    \"DLR\",\n    \"Piccadilly\",\n    DEVNULL\n  ]\n]\n\nconst quarterfinals = [\n  [\n    \"Northern\",\n    \"Jubilee\",\n    DEVNULL,\n    \"false\",\n    \"Waterloo\"\n  ],\n  [\n    \"???\",\n    \"???\",\n    DEVNULL,\n    \"false\",\n  ],\n  [\n    \"???\",\n    \"???\",\n    DEVNULL,\n    \"false\",\n  ],\n  [\n    \"???\",\n    \"???\",\n    DEVNULL,\n    \"false\",\n  ],\n]\n\ninterface StateInfo {\n  one: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  two: {\n    name: string;\n    votes: number;\n    className: string;\n  };\n  winner: number;\n  link: string;\n  today: boolean;\n  venue?: string;\n}\n\nclass App extends Component<any, { results: StateInfo[], resultsQFinals: StateInfo[], resultsHistories: any[] }> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      results: [],\n      resultsQFinals: [],\n      resultsHistories: [],\n    }\n  }\n\n  async updateHistory() {\n    console.log(\"FITOWRST\");\n    const history = await fetch(REALTIME_RESULTS)\n    this.setState({\n      resultsHistories: (await history.json()).matches\n    })\n    console.log(\"FIRST\");\n  }\n\n  componentDidMount() {\n    this.updateResults();\n    this.updateHistory();\n    const bound = this.updateResults.bind(this);\n    setInterval(() => bound(), 20000);\n\n    setInterval(async () => {\n      const history = await (await fetch(REALTIME_RESULTS)).json();\n      const matches = history.matches;\n      this.setState({\n        resultsHistories: history.matches\n      })\n    }, 120000)\n  }\n\n  async getUpdates(tuple: string[]): Promise<StateInfo> {\n    let one: number = 0;\n    let two: number = 0;\n    let winner: number = 0;\n    try {\n      if (tuple[2] !== DEVNULL) {\n        // Can get it\n        const res = await fetch(tuple[2]);\n\n        const resBody = await res.text();\n        // Assume pairs in correct order\n        const splitted = resBody.split(\"\\n\");\n        const oneHere = splitted[0].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n        one = parseInt(oneHere[0], 10);\n        if (oneHere.length > 1 && oneHere[1] === \"1\") {\n          winner = 1;\n        }\n\n        const twoHere = splitted[1].match(/^\\d+|\\d+\\b|\\d+(?=\\w)/g) || [\"0\"];\n        two = parseInt(twoHere[0], 10);\n        if (twoHere.length > 1 && twoHere[1] === \"1\") {\n          winner = 2;\n        }\n      }\n    } catch (err) {\n      console.log(err.stack);\n    } finally {\n      return {\n        one: {\n          name: tuple[0],\n          votes: one,\n          className: classes[tuple[0]]\n        },\n        two: {\n          name: tuple[1],\n          votes: two,\n          className: classes[tuple[1]]\n        },\n        winner,\n        link: tuple[2].split(\"url=\")[1],\n        today: tuple[3] === \"true\" ? true : false,\n        venue: tuple[4],\n      }\n    }\n  }\n\n  updateResults() {\n    const newPairs: Promise<StateInfo>[] = pairs.map(this.getUpdates);\n\n    Promise.all(newPairs).then((results) => this.setState({\n      results,\n    }));\n\n    const newquarterFinals: Promise<StateInfo>[] = quarterfinals.map(this.getUpdates);\n\n    Promise.all(newquarterFinals).then((resultsQFinals) => this.setState({\n      resultsQFinals,\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Tube Lines World Cup:</h1>\n          <h5>Updated every 20 secs. Please view in landscape.</h5>\n        </div>\n        <h3>Knockout stage games:</h3>\n        <Table striped bordered responsive>\n          <thead>\n            <tr>\n              <th>Line 1</th>\n              <th>Votes</th>\n              <th>%</th>\n              <th>Line 2</th>\n              <th>Votes</th>\n              <th>%</th>\n              <th>Link</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.results.map((result) => {\n                return (\n                  <tr>\n                    <td className={result.one.className}>{result.one.name} { result.winner === 1 ? <FontAwesomeIcon icon={faCheckCircle}/> : \"\" }</td>\n                    <td>{result.one.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.one.className}>{((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                    <td className={result.two.className}>{result.two.name} {result.winner === 2 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n                    <td>{result.two.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.two.className}>{((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                    <td><a href={result.link}>View</a></td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n        \n        \n        <h3>Today's games:</h3>\n        <Container>\n            {\n              this.state.results.filter(result => result.today).map((result) => {\n\n                const historydata = this.state.resultsHistories.filter(element => {\n                  return (element.one === (result.one.name !== \"Thameslink\" ? result.one.name + \" Line\" : result.one.name)) && (element.two === (result.two.name !== \"Thameslink\" ? result.two.name + \" Line\" : result.two.name))\n                })[0];\n                let oneVotes = [];\n                let twoVotes = [];\n                if (typeof historydata !== \"undefined\") {\n                  // Fix\n                  oneVotes = historydata.results.map((resultHere: any) => {\n                    console.log(resultHere.time - historydata.startTime);\n                    return {\n                      x: (resultHere.time - historydata.startTime) / 1000 / 60 / 60,\n                      y: resultHere.votes.one\n                    }\n                  });\n                  twoVotes = historydata.results.map((resultHere: any) => {\n                    return {\n                      x: (resultHere.time - historydata.startTime) / 1000 / 60 / 60,\n                      y: resultHere.votes.two\n                    }\n                  });\n                }\n            \n                return (\n                  <Row>\n                    <Col sm md lg>\n                      <VictoryChart\n                        horizontal={true}\n                        domainPadding={{ x: 100 }}\n                        categories={{ x: [result.one.name, result.two.name] }}\n                        height={350}\n                        width={500}\n                        padding={{\n                          top:0,\n                          bottom: 80,\n                          right: 10,\n                          left: 10\n                        }}\n                      >\n                        <VictoryAxis\n                          dependentAxis\n                          label=\"Votes\"\n                          fixLabelOverlap\n                          style={{\n                            axis: { stroke: \"#756f6a\" },\n                            axisLabel: { fontSize: 30, padding: 30 },\n                            tickLabels: { fontSize: 20, padding: 5 },\n                            grid: { stroke: \"grey\" },\n                            ticks: { stroke: \"grey\" },\n                          }}\n                        />\n                        <VictoryBar\n                          style={{\n                            data: { fill: ({datum}) => {\n                              console.log(datum.xName);\n                              console.log(colours[datum.xName]);\n                              return colours[datum.xName];\n                            }, width: 60 }, labels: {\n                              fill: \"#ffffff\",\n                              fontSize: 30,\n                            }\n                          }}\n                          alignment=\"middle\"\n                          labels={({ datum }) => `${datum.x}`}\n                          labelComponent={<VictoryLabel textAnchor={\"end\"} dx={-20} />}\n                          data={[\n                            { y: result.one.votes, x: result.one.name },\n                            { y: result.two.votes, x: result.two.name }\n                          ]}\n                        />\n                        <VictoryAxis\n                          fixLabelOverlap\n                          style={{\n                            axis: { stroke: \"#756f6a\" },\n                            axisLabel: { fontSize: 0, padding: 0 },\n                            tickLabels: { fontSize: 0, padding: 0 },\n                            grid: { stroke: \"grey\", strokeWidth: 0 },\n                            ticks: { strokeWidth: 0 },\n                          }}\n                        />\n                      </VictoryChart>\n                    </Col>\n                    {/*BEGIN LINES */}\n                    <Col sm md lg>\n                      <VictoryChart\n                        theme={VictoryTheme.material}\n                        height={350 * 1.5 - 50}\n                        width={750}\n                        domainPadding={{ y: 100 }}\n                        padding={{\n                          top: 0,\n                          bottom: 80,\n                          left: 100\n                        }}\n                      >\n                        <VictoryAxis\n                          dependentAxis\n                          label=\"Votes\"\n                          fixLabelOverlap\n                          style={{\n                            axis: { stroke: \"#756f6a\" },\n                            axisLabel: { fontSize: 20, padding: 40 },\n                            tickLabels: { fontSize: 20, padding: 5 },\n                            grid: { stroke: \"grey\" },\n                            ticks: { stroke: \"grey\" },\n                          }}\n                        />\n                        <VictoryAxis\n                          label=\"Time (hrs)\"\n                          fixLabelOverlap\n                          style={{\n                            axis: { stroke: \"#756f6a\" },\n                            axisLabel: { fontSize: 20, padding: 40 },\n                            tickLabels: { fontSize: 20, padding: 5 },\n                            grid: { stroke: \"grey\" },\n                            ticks: { stroke: \"grey\" },\n                          }}\n                        />\n                        <VictoryLine\n                          style={{\n                            data: { stroke: colours[result.one.name] },\n                            parent: { border: \"1px solid #ccc\" }\n                          }}\n                          data={oneVotes}\n                        />\n                        <VictoryLine\n                          style={{\n                            data: { stroke: colours[result.two.name] },\n                            parent: { border: \"1px solid #ccc\" }\n                          }}\n                          data={twoVotes}\n                        />\n                      </VictoryChart>\n                    </Col>\n                  </Row>\n                )\n              })\n            }\n        </Container>\n\n        <h3>Upcoming quarterfinals:</h3>\n        <Table striped bordered responsive>\n          <thead>\n            <tr>\n              <th>Venue</th>\n              <th>Line 1</th>\n              <th>Votes</th>\n              <th>%</th>\n              <th>Line 2</th>\n              <th>Votes</th>\n              <th>%</th>\n              <th>Link</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.resultsQFinals.map((result) => {\n                return (\n                  <tr>\n                    <td>{result.venue || \"???\"}</td>\n                    <td className={result.one.className}>{result.one.name} {result.winner === 1 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n                    <td>{result.one.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.one.className}>{((result.one.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                    <td className={result.two.className}>{result.two.name} {result.winner === 2 ? <FontAwesomeIcon icon={faCheckCircle} /> : \"\"}</td>\n                    <td>{result.two.votes}</td>\n                    <td style={{\n                      \"backgroundSize\": `100% ${((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%`\n                    }} className={result.two.className}>{((result.two.votes / (result.one.votes + result.two.votes) * 100) || 0).toFixed(1)}%</td>\n                    <td><a href={result.link}>View</a></td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </Table>\n\n        <h3>Past games:</h3>\n        <Container>\n          <Row>\n            {\n              this.state.results.filter(result => !result.today && typeof result.link !== \"undefined\").map((result) => {\n                return (\n                  <Col sm md lg>\n                    <VictoryChart\n                      horizontal={true}\n                      domainPadding={{ x: 100 }}\n                      categories={{ x: [result.one.name, result.two.name] }}\n                      height={350}\n                      //width={500}\n                      padding={{\n                        top: 0,\n                        bottom: 80,\n                        right: 10,\n                        left: 10\n                      }}\n                    >\n                      <VictoryAxis\n                        dependentAxis\n                        label=\"Votes\"\n                        fixLabelOverlap\n                        style={{\n                          axis: { stroke: \"#756f6a\" },\n                          axisLabel: { fontSize: 30, padding: 30 },\n                          tickLabels: { fontSize: 20, padding: 5 },\n                          grid: { stroke: \"grey\" },\n                          ticks: { stroke: \"grey\" },\n                        }}\n                      />\n                      <VictoryBar\n                        style={{\n                          data: {\n                            fill: ({ datum }) => {\n                              console.log(datum.xName);\n                              console.log(colours[datum.xName]);\n                              return colours[datum.xName];\n                            }, width: 60\n                          }, labels: {\n                            fill: \"#ffffff\",\n                            fontSize: 30,\n                          }\n                        }}\n                        alignment=\"middle\"\n                        labels={({ datum }) => `${datum.x}`}\n                        labelComponent={<VictoryLabel textAnchor={\"end\"} dx={-20} />}\n                        data={[\n                          { y: result.one.votes, x: result.one.name },\n                          { y: result.two.votes, x: result.two.name }\n                        ]}\n                      />\n                      <VictoryAxis\n                        fixLabelOverlap\n                        style={{\n                          axis: { stroke: \"#756f6a\" },\n                          axisLabel: { fontSize: 0, padding: 0 },\n                          tickLabels: { fontSize: 0, padding: 0 },\n                          grid: { stroke: \"grey\", strokeWidth: 0 },\n                          ticks: { strokeWidth: 0 },\n                        }}\n                      />\n                    </VictoryChart>\n                  </Col>\n                )\n              })\n            }\n          </Row>\n        </Container>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}